name: CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Run ESLint
        run: npm run lint

      - name: Run Prettier check
        run: npm run format:check

      - name: Type check
        run: npm run type-check

      - name: Run tests
        run: npm test

      - name: Build packages
        run: npm run build

  web-build:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build web app
        run: cd packages/web && npm run build

      - name: Upload web build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: packages/web/.next

  mobile-build:
    needs: lint-and-test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Setup Expo
        uses: expo/expo-github-action@v7
        with:
          expo-version: latest
          # Note: Add EXPO_TOKEN to repository secrets for mobile builds
          token: ${{ secrets.EXPO_TOKEN }}

      - name: Install dependencies
        run: npm ci --legacy-peer-deps

      - name: Build mobile app
        run: cd packages/mobile && npx expo export

      - name: Upload mobile build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: mobile-build
          path: packages/mobile/dist

  deploy-staging:
    needs: [web-build, mobile-build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'
    environment: staging

    steps:
      - name: Download web artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: ./web-build

      - name: Deploy to staging
        run: echo "Deploy to staging environment"
        # Add your staging deployment commands here

  deploy-production:
    needs: [web-build, mobile-build]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Download web artifacts
        uses: actions/download-artifact@v3
        with:
          name: web-build
          path: ./web-build

      - name: Deploy to production
        run: echo "Deploy to production environment"
        # Add your production deployment commands here
